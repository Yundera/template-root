#!/bin/bash
set -euo pipefail

# Migration: Extract DEFAULT_PWD from old .env file and move to .pcs.secret.env
# This migration handles the transition from a single .env file to the new
# multi-file environment structure (.pcs.env, .pcs.secret.env, .ynd.user.env)

# Define file paths
OLD_ENV_FILE="/DATA/AppData/casaos/apps/yundera/.env"
SECRET_ENV_FILE="/DATA/AppData/casaos/apps/yundera/.pcs.secret.env"


# Check if old .env file exists
if [ ! -f "$OLD_ENV_FILE" ]; then
    echo "Old .env file does not exist at $OLD_ENV_FILE, skipping password migration"
else
    echo "Found old .env file, checking for DEFAULT_PWD"
    
    # Extract DEFAULT_PWD from old .env file
    OLD_DEFAULT_PWD=""
    if grep -q "^DEFAULT_PWD=" "$OLD_ENV_FILE"; then
        OLD_DEFAULT_PWD=$(grep "^DEFAULT_PWD=" "$OLD_ENV_FILE" | head -1 | cut -d '=' -f2- | tr -d '"' | tr -d ' \t\r\n')
        echo "Found DEFAULT_PWD in old .env file"
    else
        echo "No DEFAULT_PWD found in old .env file"
    fi
    
    # Migrate password to secret env file if it exists and is not empty
    if [ -n "$OLD_DEFAULT_PWD" ]; then
        # Create secret env file if it doesn't exist
        mkdir -p "$(dirname "$SECRET_ENV_FILE")"
        if [ ! -f "$SECRET_ENV_FILE" ]; then
            echo "# Secret environment variables (generated by migration)" > "$SECRET_ENV_FILE"
        fi
        
        # Check if DEFAULT_PWD already exists in secret env file
        if grep -q "^DEFAULT_PWD=" "$SECRET_ENV_FILE"; then
            EXISTING_PWD=$(grep "^DEFAULT_PWD=" "$SECRET_ENV_FILE" | head -1 | cut -d '=' -f2- | tr -d '"' | tr -d ' \t\r\n')
            if [ -n "$EXISTING_PWD" ]; then
                echo "DEFAULT_PWD already exists in $SECRET_ENV_FILE with value, keeping existing"
            else
                echo "DEFAULT_PWD exists but is empty in $SECRET_ENV_FILE, updating with migrated value"
                sed -i "s/^DEFAULT_PWD=$/DEFAULT_PWD=$OLD_DEFAULT_PWD/" "$SECRET_ENV_FILE"
                echo "Updated DEFAULT_PWD in $SECRET_ENV_FILE"
            fi
        else
            # Add DEFAULT_PWD to secret env file (ensure newline before appending)
            echo "" >> "$SECRET_ENV_FILE"
            echo "DEFAULT_PWD=$OLD_DEFAULT_PWD" >> "$SECRET_ENV_FILE"
            echo "Added DEFAULT_PWD to $SECRET_ENV_FILE"
        fi
        
        # Set proper permissions on secret env file
        chmod 600 "$SECRET_ENV_FILE"
        
        echo "Successfully migrated DEFAULT_PWD from .env to .pcs.secret.env"
    else
        echo "No DEFAULT_PWD value found to migrate"
    fi
fi

