#!/bin/bash
set -euo pipefail

# Migration: Extract UID from old .env file and move to .ynd.user.env
# This migration handles the transition from a single .env file to the new
# multi-file environment structure (.pcs.env, .pcs.secret.env, .ynd.user.env)

# Define file paths
OLD_ENV_FILE="/DATA/AppData/casaos/apps/yundera/.env"
USER_ENV_FILE="/DATA/AppData/casaos/apps/yundera/.ynd.user.env"


# Check if old .env file exists
if [ ! -f "$OLD_ENV_FILE" ]; then
    echo "Old .env file does not exist at $OLD_ENV_FILE"
    # Check if UID already exists in user env file from another source
    if [ -f "$USER_ENV_FILE" ] && grep -q "^UID=" "$USER_ENV_FILE"; then
        EXISTING_UID=$(grep "^UID=" "$USER_ENV_FILE" | head -1 | cut -d '=' -f2- | tr -d '"' | tr -d ' \t\r\n')
        if [ -n "$EXISTING_UID" ]; then
            echo "UID already exists in $USER_ENV_FILE, no migration needed"
        else
            echo "Error: UID exists but is empty in $USER_ENV_FILE"
            exit 1
        fi
    else
        echo "Error: No old .env file and no existing UID found - UID migration cannot proceed"
        echo "Note: If this is a fresh installation, UID should be configured through the setup process"
        exit 1
    fi
else
    echo "Found old .env file, checking for UID"
    
    # Extract UID from old .env file
    OLD_UID=""
    if grep -q "^UID=" "$OLD_ENV_FILE"; then
        OLD_UID=$(grep "^UID=" "$OLD_ENV_FILE" | head -1 | cut -d '=' -f2- | tr -d '"' | tr -d ' \t\r\n')
        echo "Found UID in old .env file: $OLD_UID"
    else
        echo "No UID found in old .env file"
    fi
    
    # Migrate UID to user env file if it exists and is not empty
    if [ -n "$OLD_UID" ]; then
        # Create user env file if it doesn't exist
        mkdir -p "$(dirname "$USER_ENV_FILE")"
        if [ ! -f "$USER_ENV_FILE" ]; then
            echo "# User-specific environment variables (generated by migration)" > "$USER_ENV_FILE"
        fi
        
        # Check if UID already exists in user env file
        if grep -q "^UID=" "$USER_ENV_FILE"; then
            EXISTING_UID=$(grep "^UID=" "$USER_ENV_FILE" | head -1 | cut -d '=' -f2- | tr -d '"' | tr -d ' \t\r\n')
            if [ -n "$EXISTING_UID" ]; then
                echo "UID already exists in $USER_ENV_FILE with value, keeping existing"
            else
                echo "UID exists but is empty in $USER_ENV_FILE, updating with migrated value"
                sed -i "s/^UID=$/UID=$OLD_UID/" "$USER_ENV_FILE"
                echo "Updated UID in $USER_ENV_FILE"
            fi
        else
            # Add UID to user env file (ensure newline before appending)
            echo "" >> "$USER_ENV_FILE"
            echo "UID=$OLD_UID" >> "$USER_ENV_FILE"
            echo "Added UID to $USER_ENV_FILE"
        fi
        
        # Set proper permissions on user env file
        chmod 640 "$USER_ENV_FILE"
        
        echo "Successfully migrated UID from .env to .ynd.user.env"
    else
        echo "Error: No UID value found in old .env file to migrate"
        exit 1
    fi
fi

